name: Build & Deploy Test (CI/CD)

inputs:
  environment:
    type: string
  solution_name:
    type: string
  account_id:
    type: string
    
   
runs:
  using: "composite"
  steps:  
    - name: Checkout 
      uses: actions/checkout@v3 0'

    - name: Setup Node.js 🚧
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.1.1          

    - name: RUN .NET Restore
      run: |
        dotnet restore ./src

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x 

    - name: Build
      run: dotnet build ./src/${{ inputs.solution_name }} --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ./src/${{ inputs.solution_name }} --configuration Release --no-restore --no-build --verbosity normal          

    - name: Install CDK 👷
      run: |
        npm install -g aws-cdk
    - name: Install AWS lambda tools 👷
      run: |
        dotnet tool install -g Amazon.Lambda.Tools

    - name: Install zip
      uses: montudor/action-zip@v1

    - name: Build and package lambda 🏗️
      id: build        
      run: |
            dotnet lambda package --project-location ./src/Functions      

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ inputs.account_id }}:role/MACH-GitHubOIDC-Role
        aws-region: eu-west-1   

    - name: Build and package cloud assembly (synthesize) 🏗️
      id: synth        
      run: |
        cdk synth  --context environment=${{ inputs.environment }} --quiet
        (cd cdk.out && zip -r ../cdk.out.zip .)

    - uses: actions/upload-artifact@v1
      with:
        name: cdk.out
        path: cdk.out

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: arn:aws:iam::${{ inputs.account_id }}:role/MACH-GitHubOIDC-Role
        aws-region: eu-west-1       

    - name: Install CDK
      run: npm install aws-cdk -g    

    - name: Deploy
      run: cdk deploy --app cdk.out --require-approval never
