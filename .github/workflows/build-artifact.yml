name: Build, Test & Create Artifact(CI)

on:
  workflow_call:
    inputs:
      solution_name:
        type: string
      package_project:
        description: 'Name of the main package project'
        default: 'Functions'
        required: false
        type: string        

permissions:
  contents: write
  deployments: write
  id-token: write    
   
jobs:     
  build-artifact:
    runs-on: ubuntu-latest
        
    steps:    
      - name: Checkout 🛒
        uses: actions/checkout@v3
      
      - name: Setup NuGet.exe for use with actions
        uses: NuGet/setup-nuget@v1.1.1          

      - name: RUN .NET Restore 🌱
        run: |
          dotnet restore ./src

      - name: Setup .NET 6 SDK ⚙️
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.x    

      - name: Check for vulnerabilities (SNYK) 🔍
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=./src/${{ inputs.solution_name }} --policy-path=./src/.snyk --show-vulnerable-paths=all
          
      - name: Install AWS lambda tools
        run:  dotnet tool install -g Amazon.Lambda.Tools          
        
      - name: Build 🏗️
        run: dotnet build ./src/${{ inputs.solution_name }} --configuration Release --no-restore

      - name: Build and package lambda
        run: dotnet lambda package --project-location ./src/${{ inputs.package_project }}

      - name: Run tests
        run: dotnet test ./src/${{ inputs.solution_name }} --configuration Release --no-restore --no-build --verbosity normal    
        

      - name: Install CDK
        run: npm install aws-cdk -g
        
      - name: Synthesize
        run: cdk synth --quiet
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out        
        
    outputs:
      SNYK: ${{ env.artifact-build-info }}        
